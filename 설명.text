npx create-next-app@latest 로 새로운 프로젝트를 하나 만든다. 타입스크립트를 쓴경우 page.tsx, 안썼다면 pags.js 이다.
npm run dev로 시험 페이지 실행. 터미널 cd 명령어로 프로젝트 들어가서 실행해야된다.

이후 원하는 CRUD API 페이지를 만들고, 필요하다면 수정을 해주면 된다.
디자인은 원하는 사이트의 디자인을 가져와서 붙여주는게 가장 확실하다. 프롬프트로 디자인을 만드는건 원하지 않는 결과가 나올 가능성이 크다.

Superbase에 들어가서 프로젝트를 만든다.
이후 지금 진행중인 david 프로젝트 아래에 .env.local 파일을 만든다. 여기에는 환경 변수들이 저장된다.
이후 CRUD API를 실제 데이터베이스에 연동하는데, 그 사이트로 supabase 를 선택한다는 문구를 커서에 준다.
그다음 supabase에 들어가서 테이블을 하나 만들어준다.
연동해달라고 커서에게 요청한다.

이후는 만들고 싶은 페이지를 계속해서 요청하면 된다. 마음에 들면 수락하고, 마음에 안들면 거절하고, 그렇게 하나하나 구현하고 바꿔가면 된다.
완성된 프로젝트는 깃허브에 푸시하고, vercel로 배포해서 실행한다.

깃허브와 vercel을 연동하면 깃허브의 프로젝트를 그대로 불러올수 있다.
설정시 프레임워크는 Next.js로 설정해주고,
환경변수는 .env.local에 저장된 변수를 붙여넣어 준다.